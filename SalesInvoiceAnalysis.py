# -*- coding: utf-8 -*-
"""ExploratoryAnalysisOnSalesInvoice.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14f1zpPgdqeu8n3j8SYfbjIB5WZWub8bc

**Import Dataset**
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline

"""**Read Data**"""

df = pd.read_csv("supermarket_sales.csv")

"""**Sample Data**"""

df.head()

"""**Get Columns**"""

df.columns

"""**Check for Duplicated Values**"""

df.duplicated().sum()

"""**Check for Missing Values**"""

df.isna().sum()

"""**Column Information**<br><br>
cogs = unit price * quantity<br>
Tax = 0.05 * cogs<br>
Total = cogs + Tax<br>
gross Income = Total - cogs <br>
gross margin percentage = gross Income / Total<br><br>

**Changing data type of Date and Time Columns**
"""

df['Date'] = pd.to_datetime(df.Date)
df['Time'] = pd.to_datetime(df.Time)

df["day"] = df['Date'].map(lambda x: x.day)
df["month"] = df['Date'].map(lambda x: x.month)
df["year"] = df['Date'].map(lambda x: x.year)

df.head()

"""# Describe Data"""

df.describe()

"""# Separating Numerical and Categorical Variables"""

categorical=[x for x in df.columns if df[x].dtype=="O"]
numerical = [x for x in df.columns if x not in categorical]

categorical

numerical

"""# Remove Outliers"""

for i in numerical:
  if i in {'Date','Time','day','month','year','Tax 5%','cogs','gross margin percentage'}:
    continue
  plt.title(i)
  sns.boxplot(x = df[i])
  plt.show()

q25, q50 = np.percentile(df['cogs'],25), np.percentile(df['cogs'],75)
iqr = q50 - q25
limit = 1.5*iqr
upper_limit, lower_limit = q50 + limit, q25 - limit
df = df[(df['cogs']>= lower_limit) & (df['cogs']<=upper_limit)]

for i in numerical:
  if i in {'Date','Time','day','month','year','Tax 5%','cogs','gross margin percentage'}:
    continue
  plt.title(i)
  sns.boxplot(x = df[i])
  plt.show()

"""# Compare gross income for each month"""

df.groupby(['month'],sort = True)['gross income'].agg("sum")

df.groupby(['month'])['gross income'].count()

df.groupby(['month'],sort = True)['gross income'].agg("sum").plot(kind = "bar")

df.groupby(['Date'],sort = True)['gross income'].agg("sum").plot(kind = "line")

plt.title('Month')
sns.countplot(x = df['month'])
plt.xticks(rotation = 45)
plt.show()

"""# Compare product's gross income over city, gender and Customer type

**Product's gross income over City**
"""

df.groupby(['Product line','City'])['gross income'].agg('sum').unstack()

df.groupby(['Product line','City'])['gross income'].agg('sum').unstack().plot(kind = "bar")

"""In **Naypitaw** city, **Food and beverages** are highly popular.<br>
In **Yangon** city,  **Home and Lifestyle** products are more popular.<br>
In **Mandalay** city, **Health and Beauty** and ** Sports and travel  ** products are equally popular.

**Product's gross income over Gender**
"""

df.groupby(['Product line','Gender'])['gross income'].agg('sum').unstack()

df.groupby(['Product line','Gender'])['gross income'].agg('sum').unstack().plot(kind = "bar")

"""From the above graph we can see that the **Health and beauty products are more popular in Male than in Female**.<br>Also, **Females purchase more Food and beverages.**

**Product's gross income over Customer type**
"""

df.groupby(['Product line','Customer type'])['gross income'].agg('sum').unstack()

df.groupby(['Product line','Customer type'])['gross income'].agg('sum').unstack().plot(kind = "bar")

"""Other than Electronic accessories and Fashion accessories, Member customer type provides more gross income in all product lines.<br>Food and beverages is the highest of all.<br>Also we can observe **non member customers has generated more gross income in electronic accessories** than most of the product lines"""

df.groupby(['Product line'])['gross income'].agg('sum')

df.groupby(['Product line'])['gross income'].agg('sum').plot(kind = "bar")

"""Food and beverages generated more gross income.

# Compare Profits of each City
"""

df.groupby(['City'])['gross income'].agg('sum')

df.groupby(['City'])['gross income'].agg('sum').plot(kind = "pie")

"""# Compare customers payment preference"""

df.groupby(['Payment','Gender'])['gross income'].count().unstack()

df.groupby(['Payment','Gender'])['gross income'].agg('sum').unstack()

df.groupby(['Payment','Gender'])['gross income'].agg('sum').unstack().plot(kind = "bar")

df.groupby(['Payment','Gender'])['gross income'].agg('mean').unstack().plot(kind = "bar")

"""Though Men make more Ewallet transactions (184 transactions), Women generated more gross income via Cash payment method.<br>But On comparing the average gross income, there is no big difference between Male and Female

# Compare Rating for each product line
"""

df.groupby(['Product line','Customer type','Gender','City'])['Rating'].agg('mean').unstack()

df.groupby(['Product line','Customer type','Gender','City'])['Rating'].agg('mean').unstack().plot(kind = "bar")

"""We Can observe that the electronic accessories in Naypyitaw needs improvement compared to others"""